{
  "openapi": "3.0.1",
  "info": {
    "title": "Nova API",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.nova-call.com/"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/call": {
      "get": {
        "description": "Returns all calls for the user",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of calls",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Call"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new call in the system",
        "requestBody": {
          "description": "Call to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Call created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/call/{id}": {
      "get": {
        "description": "Gets details of a call by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the call",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the call",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Call": {
        "required": ["id", "caller", "callee"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the call",
            "type": "integer",
            "format": "int64"
          },
          "caller": {
            "description": "Caller information",
            "type": "string"
          },
          "callee": {
            "description": "Callee information",
            "type": "string"
          },
          "duration": {
            "description": "Duration of the call in seconds",
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "description": "Timestamp of the call",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewCall": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Call"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the call",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
